library("UsingR")
data(diamond)
# get model 1: Intercept hard to interpret
fit <- lm(price~carat, data = diamond)
# see coef
coef(fit)
plot(fit)
head(diamond)
resid(fit)
library("UsingR")
data(diamond)
# get model 1: Intercept hard to interpret
fit <- lm(price~carat, data = diamond)
# see coef
coef(fit)
g <- ggplot(diamond, aes(x = carat, y = price))
g <- g + xlab("Mass")
g <- g + ylab("Price")
g <- g + geom_point(size = 7, color = "black", alpha = 0.5)
g <- g + geom_point(size = 5, color = "blue", alpha = 0.2)
g <- g + geom_smooth(method = "lm", color = "black")
g
newx = data.frame(x = seq(min(x), max(x), length = 100))
p1 = data.frame(predict(fit, newdata= newx,interval = ("confidence")))
p2 = data.frame(predict(fit, newdata = newx,interval = ("prediction")))
p1$interval = "confidence"
p2$interval = "prediction"
p1$x = newx$x
p2$x = newx$x
dat = rbind(p1, p2)
names(dat)[1] = "y"
g = ggplot(dat, aes(x = x, y = y))
g = g + geom_ribbon(aes(ymin = lwr, ymax = upr, fill = interval), alpha = 0.2)
g = g + geom_line()
g = g + geom_point(data = data.frame(x = x, y=y), aes(x = x, y = y), size = 4)
g
library("datasets")
library("dplyr")
install.packages("dplyr")
library("dplyr")
data(swiss)
swiss <- mutate(swiss, CatholicBin = 1 * (Catholic > 50))
fit <- lm(Fertility~Agriculture + factor(CatholicBin), data = swiss)
g <- ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g <- g + geom_point(size = 6, color = "black") + geom_point(size = 4)
g <- g + xlab("% in Agriculture") + ylab("Fertility")
g
plot(fit)
